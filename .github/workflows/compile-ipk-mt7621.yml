
name: Compile IPK (ramips/mt7621)

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      UPLOAD_BIN_DIR:
        description: 'Upload Bin Driectory'
        required: true
        type: choice
        options:
        - true
        - false
        default: 'true'
      UPLOAD_IPK:
        description: 'Upload IPK'
        required: true
        type: choice
        options:
        - true
        - false
        default: 'true'
      UPLOAD_RELEASE:
        description: 'Upload IPK to Release'
        required: true
        type: choice
        options:
        - true
        - false
        default: 'true'

env:
  SDK_DLINK: https://downloads.openwrt.org/releases/21.02.3/targets/ramips/mt7621/openwrt-sdk-21.02.3-ramips-mt7621_gcc-8.4.0_musl.Linux-x86_64.tar.xz # 21.02.3 MT7621 SDK
  ADD_SRC: addfeedsrc.sh
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync zip
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Download SDK
      working-directory: /workdir
      run: |
        df -hT $PWD
        wget $SDK_DLINK -O sdk.tar.xz && tar -Jxf sdk.tar.xz && mv openwrt-sdk-* openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Add custom feeds sources
      run: |
        chmod +x $ADD_SRC
        cd openwrt
        $GITHUB_WORKSPACE/$ADD_SRC

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Enable cCache
      run: cd openwrt && make defconfig && sed -i "s/# CONFIG_CCACHE is not set/CONFIG_CCACHE=y/g" .config

    - name: Compile IPK
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        for line in $(cat $GITHUB_WORKSPACE/apps.txt);do make -j$(nproc) package/$line/compile || make -j1 package/$line/compile || make -j1 V=s package/$line/compile;done
        staging_dir/host/bin/usign -G -s key-build -p key-build.pub -c "Local Build Key"
        make -j$(nproc) package/index
        echo "::set-output name=status::success"
        echo $SDK_DLINK | sed -r 's/.*openwrt-sdk-(.*)_gcc.*/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      if: steps.compile.outputs.status == 'success' && github.event.inputs.UPLOAD_BIN_DIR == 'true'
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      run: |
        cd openwrt/bin/packages/*
        echo "IPK=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Upload IPK directory
      if: github.event.inputs.UPLOAD_IPK == 'true' && steps.organize.outputs.status == 'success' && !cancelled()
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt_IPK${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.IPK }}

    - name: Compress releasing files
      id: compress
      if: github.event.inputs.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        zip -r $IPK/packages$DEVICE_NAME.zip $IPK/*
        echo "::set-output name=status::success"

    - name: Generate release tag
      id: tag
      if: steps.compress.outputs.status == 'success' && !cancelled()
      run: |
        echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
        touch release.txt
        echo "::set-output name=status::success"

    - name: Upload IPK to release
      if: steps.tag.outputs.status == 'success' && !cancelled()
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.IPK }}/packages${{ env.DEVICE_NAME }}.zip

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: Remove old Releases
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      uses: dev-drprasad/delete-older-releases@v0.1.0
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
